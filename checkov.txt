checkov     _               _
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V /
  \___|_| |_|\___|\___|_|\_\___/ \_/

By Prisma Cloud | version: 3.2.305

terraform scan results:

Passed checks: 44, Failed checks: 6, Skipped checks: 0

Check: CKV_YC_12: "Ensure public IP is not assigned to database cluster."
        PASSED for resource: yandex_mdb_mysql_cluster.example
        File: /mysql/main.tf:10-40
Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
        PASSED for resource: aws.default
        File: /terraform-yc-s3-master/examples/all-in-one/versions.tf:22-29
Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
        PASSED for resource: aws.default
        File: /terraform-yc-s3-master/examples/hardening/versions.tf:22-29
Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
        PASSED for resource: module.s3.aws.default
        File: /terraform-yc-s3-master/examples/simple-bucket/versions.tf:22-29
        Calling File: /main.tf:119-121
Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
        PASSED for resource: aws.default
        File: /terraform-yc-s3-master/examples/static-website/versions.tf:22-29
Check: CKV_YC_3: "Ensure storage bucket is encrypted."
        PASSED for resource: module.log_bucket.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_YC_17: "Ensure storage bucket does not have public access permissions."
        PASSED for resource: module.log_bucket.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_YC_3: "Ensure storage bucket is encrypted."
        PASSED for resource: module.s3.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_YC_17: "Ensure storage bucket does not have public access permissions."
        PASSED for resource: module.s3.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:20-88
Check: CKV_YC_3: "Ensure storage bucket is encrypted."
        PASSED for resource: module.s3.module.s3.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_YC_17: "Ensure storage bucket does not have public access permissions."
        PASSED for resource: module.s3.module.s3.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_358: "Ensure GitHub Actions OIDC trust policies only allows actions from a specific known organization"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_356: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_283: "Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/hardening/main.tf:14-18
Check: CKV_AWS_358: "Ensure GitHub Actions OIDC trust policies only allows actions from a specific known organization"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_356: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_283: "Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37
Check: CKV_AWS_358: "Ensure GitHub Actions OIDC trust policies only allows actions from a specific known organization"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_356: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_283: "Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
        Calling File: /terraform-yc-s3-master/examples/simple-bucket/main.tf:10-15
Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
        PASSED for resource: module.log_bucket.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
        PASSED for resource: module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
        PASSED for resource: module.s3.module.s3.aws_iam_policy_document.this
        File: /terraform-yc-s3-master/policy.tf:1-113
Check: CKV_TF_1: "Ensure Terraform module sources use a commit hash"
        FAILED for resource: test-vm
        File: /main.tf:34-54

                34 | module "test-vm" {
                35 |   source         = "git::https://github.com/udjin10/yandex_compute_instance.git?ref=main"
                36 |   env_name       = var.vm_name
                37 |   network_id     = module.vpc_dev.yandex_vpc_net_info.id
                38 |   subnet_zones   = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.zone]
                39 |   subnet_ids     = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.id]
                40 |   instance_name  = local.vm_labels[0].project
                41 |   instance_count = 1
                42 |   image_family   = "ubuntu-2004-lts"
                43 |   public_ip      = true
                44 |
                45 |   labels = {
                46 |     project = local.vm_labels[0].project
                47 |      }
                48 |
                49 |   metadata = {
                50 |     user-data          = data.template_file.cloudinit.rendered
                51 |     serial-port-enable = 1
                52 |   }
                53 |
                54 | }

Check: CKV_TF_2: "Ensure Terraform module sources use a tag with a version number"
        FAILED for resource: test-vm
        File: /main.tf:34-54

                34 | module "test-vm" {
                35 |   source         = "git::https://github.com/udjin10/yandex_compute_instance.git?ref=main"
                36 |   env_name       = var.vm_name
                37 |   network_id     = module.vpc_dev.yandex_vpc_net_info.id
                38 |   subnet_zones   = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.zone]
                39 |   subnet_ids     = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.id]
                40 |   instance_name  = local.vm_labels[0].project
                41 |   instance_count = 1
                42 |   image_family   = "ubuntu-2004-lts"
                43 |   public_ip      = true
                44 |
                45 |   labels = {
                46 |     project = local.vm_labels[0].project
                47 |      }
                48 |
                49 |   metadata = {
                50 |     user-data          = data.template_file.cloudinit.rendered
                51 |     serial-port-enable = 1
                52 |   }
                53 |
                54 | }

Check: CKV_TF_1: "Ensure Terraform module sources use a commit hash"
        FAILED for resource: test-vm2
        File: /main.tf:56-76

                56 | module "test-vm2" {
                57 |   source         = "git::https://github.com/udjin10/yandex_compute_instance.git?ref=main"
                58 |   env_name       = var.vm_name
                59 |   network_id     = module.vpc_dev.yandex_vpc_net_info.id
                60 |   subnet_zones   = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.zone]
                61 |   subnet_ids     = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.id]
                62 |   instance_name  = local.vm_labels[1].project
                63 |   instance_count = 1
                64 |   image_family   = "ubuntu-2004-lts"
                65 |   public_ip      = true
                66 |
                67 |   labels = {
                68 |     project = local.vm_labels[1].project
                69 |      }
                70 |
                71 |   metadata = {
                72 |     user-data          = data.template_file.cloudinit.rendered
                73 |     serial-port-enable = 1
                74 |   }
                75 |
                76 | }

Check: CKV_TF_2: "Ensure Terraform module sources use a tag with a version number"
        FAILED for resource: test-vm2
        File: /main.tf:56-76

                56 | module "test-vm2" {
                57 |   source         = "git::https://github.com/udjin10/yandex_compute_instance.git?ref=main"
                58 |   env_name       = var.vm_name
                59 |   network_id     = module.vpc_dev.yandex_vpc_net_info.id
                60 |   subnet_zones   = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.zone]
                61 |   subnet_ids     = [for key, subnet in module.vpc_dev.yandex_vpc_subnet_info : subnet.id]
                62 |   instance_name  = local.vm_labels[1].project
                63 |   instance_count = 1
                64 |   image_family   = "ubuntu-2004-lts"
                65 |   public_ip      = true
                66 |
                67 |   labels = {
                68 |     project = local.vm_labels[1].project
                69 |      }
                70 |
                71 |   metadata = {
                72 |     user-data          = data.template_file.cloudinit.rendered
                73 |     serial-port-enable = 1
                74 |   }
                75 |
                76 | }

Check: CKV_YC_1: "Ensure security group is assigned to database cluster."
        FAILED for resource: yandex_mdb_mysql_cluster.example
        File: /mysql/main.tf:10-40

                10 | resource "yandex_mdb_mysql_cluster" "example" {
                11 |   name        = var.cluster_name
                12 |   network_id  = var.network_id
                13 |   environment = var.environment
                14 |   version     = var.cluster_version
                15 |
                16 |   resources {
                17 |     resource_preset_id = var.resource_preset_id
                18 |     disk_type_id       = var.disk_type_id
                19 |     disk_size          = var.disk_size
                20 |   }
                21 |
                22 |   mysql_config = {
                23 |     sql_mode                      = var.sql_mode
                24 |   }
                25 |
                26 | #один всегда создаем
                27 |   host {
                28 |     zone      = var.zone
                29 |     subnet_id = var.subnet_id
                30 |   }
                31 |
                32 | # создаем 2й хост в зависимости от переменной HA
                33 |   dynamic "host" {
                34 |     for_each = var.HA ? [1] : []
                35 |     content {
                36 |       zone      = var.zone
                37 |       subnet_id = var.subnet_id
                38 |     }
                39 |   }
                40 | }

Check: CKV_YC_17: "Ensure storage bucket does not have public access permissions."
        FAILED for resource: module.s3.yandex_storage_bucket.this
        File: /terraform-yc-s3-master/main.tf:57-225
        Calling File: /terraform-yc-s3-master/examples/static-website/main.tf:10-37

                Code lines for this resource are too many. Please use IDE of your choice to review the file.